define max 5
struct stack
{
        int data[max];
        int top;
        }s;
        void init()
        {
        s.top=-1;
        }
        int isempty()
        {
                if(s.top==-1)
                return 1;
        else
                return 0;
        }
        int isfull()
        {
                if(s.top==max-1)
                return 1;
                else
                return 0;
        }
        void push(int num)
        {
                if(isfull())
                {
                printf("stack is full don't push:");
                }
                else
                {
                s.top++;
                s.data[s.top]=num;
                printf("push successfully:");
                }
        }
                void pop()
                {
                        int val;
                        if(isempty())
                        {

                printf("\n stack is empty don't pop..");
                }
                else
                {
                 val=s.data[s.top];
                 s.top--;
                 printf("\n poped values=%d",val);
                 }
                }
                void disp()
                {
                        int i;
                        for(i=s.top;i>=0;i--)
                        {
                        printf("%d\n",s.data[i]);
                        }
}
        int main()
        {
                int ch,num,n;
                init();
                do
                {
                printf("\n 1-push \n 2-pop\n 3-disp:");
                printf("enter choice :");
                scanf("%d",&ch);
                switch(ch)
                {

                case 1:
                printf("enter number :");
                scanf("%d",&num);
                push(num);
                break;
                case 2:pop();
                        break;
                case 3:disp();
                        break;
                default:printf("invalid choice:");
                break;
                }
}while(ch<4);
}








